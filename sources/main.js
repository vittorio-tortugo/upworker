// Generated by CoffeeScript 1.10.0
(function() {
  var freshJobsButton, get_jobs_elements, init_counters, is_in_find_work_page, is_in_proposals_page, is_in_saved_jobs_page, is_same_page, is_should_show_counters, load_counters_data_for, moreJobsButton, pseudo_callback, show_counters;

  is_same_page = function(url) {
    return location.pathname.indexOf(url) > -1;
  };

  is_in_find_work_page = function() {
    return is_same_page('find-work-home');
  };

  is_in_saved_jobs_page = function() {
    return is_same_page('jobs/saved');
  };

  is_in_proposals_page = function() {
    return is_same_page('applications/active');
  };

  is_should_show_counters = function() {
    return is_in_find_work_page() || is_in_saved_jobs_page();
  };

  get_jobs_elements = function() {
    var jobs, jobsWrapper;
    jobsWrapper = document.getElementsByTagName('section')[0];
    return jobs = jobsWrapper.getElementsByTagName('article');
  };

  show_counters = function(data, jobEl) {
    var applicants_count, counters, el, interviewing_count;
    applicants_count = data.applicants.length;
    interviewing_count = data.invitedToInterview;
    counters = jobEl.getElementsByClassName('counters');
    if (counters.length) {
      el = counters[0];
    } else {
      el = document.createElement('span');
      el.className = 'counters';
      jobEl.appendChild(el);
    }
    return el.innerText = "Applicants: " + applicants_count + " | Interviewing: " + interviewing_count;
  };

  load_counters_data_for = function(jobEl) {
    var url, xhr;
    url = jobEl.getAttribute('data-id');
    xhr = new XMLHttpRequest;
    xhr.open('GET', '/jobs/' + url + '/applicants');
    xhr.onreadystatechange = function() {
      var response;
      if (xhr.readyState !== 4) {
        return;
      }
      if (xhr.response && xhr.response.length) {
        response = JSON.parse(xhr.response);
        return show_counters(response, jobEl);
      }
    };
    return xhr.send();
  };

  init_counters = function() {
    var jobs;
    if (is_should_show_counters()) {
      jobs = get_jobs_elements();
      return Array.prototype.forEach.call(jobs, function(job) {
        return load_counters_data_for(job);
      });
    }
  };

  pseudo_callback = function() {};

  init_counters();

  setInterval(init_counters, 60 * 1000);

  if (is_in_find_work_page()) {
    moreJobsButton = document.getElementById('jsLoadMoreJobs');
    freshJobsButton = document.getElementById('');
    if (moreJobsButton != null) {
      moreJobsButton.addEventListener('click', pseudo_callback);
    }
    if (freshJobsButton != null) {
      freshJobsButton.addEventListener('click', pseudo_callback);
    }
  }

}).call(this);
